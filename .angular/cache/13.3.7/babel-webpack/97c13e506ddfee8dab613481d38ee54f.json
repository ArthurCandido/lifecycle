{"ast":null,"code":"import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, forwardRef, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, ContentChild, ViewChild, Input, Output, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nclass CdkStepHeader {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n  /** Focuses the step header. */\n\n\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n\n}\n\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) {\n  return new (t || CdkStepHeader)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCdkStepHeader.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdkStepHeader,\n  selectors: [[\"\", \"cdkStepHeader\", \"\"]],\n  hostAttrs: [\"role\", \"tab\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepHeader]',\n      host: {\n        'role': 'tab'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass CdkStepLabel {\n  constructor(\n  /** @docs-private */\n  template) {\n    this.template = template;\n  }\n\n}\n\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) {\n  return new (t || CdkStepLabel)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nCdkStepLabel.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdkStepLabel,\n  selectors: [[\"\", \"cdkStepLabel\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepLabel]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Used to generate unique ID for each stepper component. */\n\n\nlet nextId = 0;\n/** Change event emitted on selection changes. */\n\nclass StepperSelectionEvent {}\n/** Enum to represent the different states of the steps. */\n\n\nconst STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n/** InjectionToken that can be used to specify the global stepper options. */\n\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n\nclass CdkStep {\n  constructor(_stepper, stepperOptions) {\n    this._stepper = _stepper;\n    /** Whether user has attempted to move away from the step. */\n\n    this.interacted = false;\n    /** Emits when the user has attempted to move away from the step. */\n\n    this.interactedStream = new EventEmitter();\n    this._editable = true;\n    this._optional = false;\n    this._completedOverride = null;\n    this._customError = null;\n    this._stepperOptions = stepperOptions ? stepperOptions : {};\n    this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n  }\n  /** Whether the user can return to this step once it has been marked as completed. */\n\n\n  get editable() {\n    return this._editable;\n  }\n\n  set editable(value) {\n    this._editable = coerceBooleanProperty(value);\n  }\n  /** Whether the completion of step is optional. */\n\n\n  get optional() {\n    return this._optional;\n  }\n\n  set optional(value) {\n    this._optional = coerceBooleanProperty(value);\n  }\n  /** Whether step is marked as completed. */\n\n\n  get completed() {\n    return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n  }\n\n  set completed(value) {\n    this._completedOverride = coerceBooleanProperty(value);\n  }\n\n  _getDefaultCompleted() {\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n  }\n  /** Whether step has an error. */\n\n\n  get hasError() {\n    return this._customError == null ? this._getDefaultError() : this._customError;\n  }\n\n  set hasError(value) {\n    this._customError = coerceBooleanProperty(value);\n  }\n\n  _getDefaultError() {\n    return this.stepControl && this.stepControl.invalid && this.interacted;\n  }\n  /** Selects this step component. */\n\n\n  select() {\n    this._stepper.selected = this;\n  }\n  /** Resets the step to its initial state. Note that this includes resetting form data. */\n\n\n  reset() {\n    this.interacted = false;\n\n    if (this._completedOverride != null) {\n      this._completedOverride = false;\n    }\n\n    if (this._customError != null) {\n      this._customError = false;\n    }\n\n    if (this.stepControl) {\n      this.stepControl.reset();\n    }\n  }\n\n  ngOnChanges() {\n    // Since basically all inputs of the MatStep get proxied through the view down to the\n    // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n    this._stepper._stateChanged();\n  }\n\n  _markAsInteracted() {\n    if (!this.interacted) {\n      this.interacted = true;\n      this.interactedStream.emit(this);\n    }\n  }\n  /** Determines whether the error state can be shown. */\n\n\n  _showError() {\n    var _a; // We want to show the error state either if the user opted into/out of it using the\n    // global options, or if they've explicitly set it through the `hasError` input.\n\n\n    return (_a = this._stepperOptions.showError) !== null && _a !== void 0 ? _a : this._customError != null;\n  }\n\n}\n\nCdkStep.ɵfac = function CdkStep_Factory(t) {\n  return new (t || CdkStep)(i0.ɵɵdirectiveInject(forwardRef(() => CdkStepper)), i0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8));\n};\n\nCdkStep.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CdkStep,\n  selectors: [[\"cdk-step\"]],\n  contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, CdkStepLabel, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    }\n  },\n  viewQuery: function CdkStep_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TemplateRef, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    }\n  },\n  inputs: {\n    stepControl: \"stepControl\",\n    label: \"label\",\n    errorMessage: \"errorMessage\",\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"],\n    state: \"state\",\n    editable: \"editable\",\n    optional: \"optional\",\n    completed: \"completed\",\n    hasError: \"hasError\"\n  },\n  outputs: {\n    interactedStream: \"interacted\"\n  },\n  exportAs: [\"cdkStep\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function CdkStep_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStep, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-step',\n      exportAs: 'cdkStep',\n      template: '<ng-template><ng-content></ng-content></ng-template>',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: CdkStepper,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => CdkStepper)]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [STEPPER_GLOBAL_OPTIONS]\n      }]\n    }];\n  }, {\n    stepLabel: [{\n      type: ContentChild,\n      args: [CdkStepLabel]\n    }],\n    content: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    stepControl: [{\n      type: Input\n    }],\n    interactedStream: [{\n      type: Output,\n      args: ['interacted']\n    }],\n    label: [{\n      type: Input\n    }],\n    errorMessage: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    state: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    optional: [{\n      type: Input\n    }],\n    completed: [{\n      type: Input\n    }],\n    hasError: [{\n      type: Input\n    }]\n  });\n})();\n\nclass CdkStepper {\n  constructor(_dir, _changeDetectorRef, _elementRef,\n  /**\n   * @deprecated No longer in use, to be removed.\n   * @breaking-change 13.0.0\n   */\n  _document) {\n    this._dir = _dir;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    /** Emits when the component is destroyed. */\n\n    this._destroyed = new Subject();\n    /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n\n    this.steps = new QueryList();\n    /** List of step headers sorted based on their DOM order. */\n\n    this._sortedHeaders = new QueryList();\n    this._linear = false;\n    this._selectedIndex = 0;\n    /** Event emitted when the selected step has changed. */\n\n    this.selectionChange = new EventEmitter();\n    /**\n     * @deprecated To be turned into a private property. Use `orientation` instead.\n     * @breaking-change 13.0.0\n     */\n\n    this._orientation = 'horizontal';\n    this._groupId = nextId++;\n  }\n  /** Whether the validity of previous steps should be checked or not. */\n\n\n  get linear() {\n    return this._linear;\n  }\n\n  set linear(value) {\n    this._linear = coerceBooleanProperty(value);\n  }\n  /** The index of the selected step. */\n\n\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n\n  set selectedIndex(index) {\n    var _a;\n\n    const newIndex = coerceNumberProperty(index);\n\n    if (this.steps && this._steps) {\n      // Ensure that the index can't be out of bounds.\n      if (!this._isValidIndex(newIndex) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n      }\n\n      (_a = this.selected) === null || _a === void 0 ? void 0 : _a._markAsInteracted();\n\n      if (this._selectedIndex !== newIndex && !this._anyControlsInvalidOrPending(newIndex) && (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n        this._updateSelectedItemIndex(newIndex);\n      }\n    } else {\n      this._selectedIndex = newIndex;\n    }\n  }\n  /** The step that is selected. */\n\n\n  get selected() {\n    return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n  }\n\n  set selected(step) {\n    this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n  }\n  /** Orientation of the stepper. */\n\n\n  get orientation() {\n    return this._orientation;\n  }\n\n  set orientation(value) {\n    // This is a protected method so that `MatSteppter` can hook into it.\n    this._orientation = value;\n\n    if (this._keyManager) {\n      this._keyManager.withVerticalOrientation(value === 'vertical');\n    }\n  }\n\n  ngAfterContentInit() {\n    this._steps.changes.pipe(startWith(this._steps), takeUntil(this._destroyed)).subscribe(steps => {\n      this.steps.reset(steps.filter(step => step._stepper === this));\n      this.steps.notifyOnChanges();\n    });\n  }\n\n  ngAfterViewInit() {\n    // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n    // Material stepper, they won't appear in the `QueryList` in the same order as they're\n    // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n    // them manually to ensure that they're correct. Alternatively, we can change the Material\n    // template to inline the headers in the `ngFor`, but that'll result in a lot of\n    // code duplciation. See #23539.\n    this._stepHeader.changes.pipe(startWith(this._stepHeader), takeUntil(this._destroyed)).subscribe(headers => {\n      this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n        const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement); // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        // tslint:disable-next-line:no-bitwise\n\n\n        return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n      }));\n\n      this._sortedHeaders.notifyOnChanges();\n    }); // Note that while the step headers are content children by default, any components that\n    // extend this one might have them as view children. We initialize the keyboard handling in\n    // AfterViewInit so we're guaranteed for both view and content children to be defined.\n\n\n    this._keyManager = new FocusKeyManager(this._sortedHeaders).withWrap().withHomeAndEnd().withVerticalOrientation(this._orientation === 'vertical');\n    (this._dir ? this._dir.change : of()).pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed)).subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n\n    this._keyManager.updateActiveItem(this._selectedIndex); // No need to `takeUntil` here, because we're the ones destroying `steps`.\n\n\n    this.steps.changes.subscribe(() => {\n      if (!this.selected) {\n        this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n      }\n    }); // The logic which asserts that the selected index is within bounds doesn't run before the\n    // steps are initialized, because we don't how many steps there are yet so we may have an\n    // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n\n    if (!this._isValidIndex(this._selectedIndex)) {\n      this._selectedIndex = 0;\n    }\n  }\n\n  ngOnDestroy() {\n    this.steps.destroy();\n\n    this._sortedHeaders.destroy();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n  }\n  /** Selects and focuses the next step in list. */\n\n\n  next() {\n    this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n  }\n  /** Selects and focuses the previous step in list. */\n\n\n  previous() {\n    this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n  }\n  /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n\n\n  reset() {\n    this._updateSelectedItemIndex(0);\n\n    this.steps.forEach(step => step.reset());\n\n    this._stateChanged();\n  }\n  /** Returns a unique id for each step label element. */\n\n\n  _getStepLabelId(i) {\n    return `cdk-step-label-${this._groupId}-${i}`;\n  }\n  /** Returns unique id for each step content element. */\n\n\n  _getStepContentId(i) {\n    return `cdk-step-content-${this._groupId}-${i}`;\n  }\n  /** Marks the component to be change detected. */\n\n\n  _stateChanged() {\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Returns position state of the step with the given index. */\n\n\n  _getAnimationDirection(index) {\n    const position = index - this._selectedIndex;\n\n    if (position < 0) {\n      return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n    } else if (position > 0) {\n      return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n    }\n\n    return 'current';\n  }\n  /** Returns the type of icon to be displayed. */\n\n\n  _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n    const step = this.steps.toArray()[index];\n\n    const isCurrentStep = this._isCurrentStep(index);\n\n    return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) : this._getGuidelineLogic(step, isCurrentStep, state);\n  }\n\n  _getDefaultIndicatorLogic(step, isCurrentStep) {\n    if (step._showError() && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (!step.completed || isCurrentStep) {\n      return STEP_STATE.NUMBER;\n    } else {\n      return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n    }\n  }\n\n  _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n    if (step._showError() && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (step.completed && !isCurrentStep) {\n      return STEP_STATE.DONE;\n    } else if (step.completed && isCurrentStep) {\n      return state;\n    } else if (step.editable && isCurrentStep) {\n      return STEP_STATE.EDIT;\n    } else {\n      return state;\n    }\n  }\n\n  _isCurrentStep(index) {\n    return this._selectedIndex === index;\n  }\n  /** Returns the index of the currently-focused step header. */\n\n\n  _getFocusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n  }\n\n  _updateSelectedItemIndex(newIndex) {\n    const stepsArray = this.steps.toArray();\n    this.selectionChange.emit({\n      selectedIndex: newIndex,\n      previouslySelectedIndex: this._selectedIndex,\n      selectedStep: stepsArray[newIndex],\n      previouslySelectedStep: stepsArray[this._selectedIndex]\n    }); // If focus is inside the stepper, move it to the next header, otherwise it may become\n    // lost when the active step content is hidden. We can't be more granular with the check\n    // (e.g. checking whether focus is inside the active step), because we don't have a\n    // reference to the elements that are rendering out the content.\n\n    this._containsFocus() ? this._keyManager.setActiveItem(newIndex) : this._keyManager.updateActiveItem(newIndex);\n    this._selectedIndex = newIndex;\n\n    this._stateChanged();\n  }\n\n  _onKeydown(event) {\n    const hasModifier = hasModifierKey(event);\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n\n    if (manager.activeItemIndex != null && !hasModifier && (keyCode === SPACE || keyCode === ENTER)) {\n      this.selectedIndex = manager.activeItemIndex;\n      event.preventDefault();\n    } else {\n      manager.onKeydown(event);\n    }\n  }\n\n  _anyControlsInvalidOrPending(index) {\n    if (this._linear && index >= 0) {\n      return this.steps.toArray().slice(0, index).some(step => {\n        const control = step.stepControl;\n        const isIncomplete = control ? control.invalid || control.pending || !step.interacted : !step.completed;\n        return isIncomplete && !step.optional && !step._completedOverride;\n      });\n    }\n\n    return false;\n  }\n\n  _layoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Checks whether the stepper contains the focused element. */\n\n\n  _containsFocus() {\n    const stepperElement = this._elementRef.nativeElement;\n\n    const focusedElement = _getFocusedElementPierceShadowDom();\n\n    return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n  }\n  /** Checks whether the passed-in index is a valid step index. */\n\n\n  _isValidIndex(index) {\n    return index > -1 && (!this.steps || index < this.steps.length);\n  }\n\n}\n\nCdkStepper.ɵfac = function CdkStepper_Factory(t) {\n  return new (t || CdkStepper)(i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nCdkStepper.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdkStepper,\n  selectors: [[\"\", \"cdkStepper\", \"\"]],\n  contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, CdkStep, 5);\n      i0.ɵɵcontentQuery(dirIndex, CdkStepHeader, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._steps = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    }\n  },\n  inputs: {\n    linear: \"linear\",\n    selectedIndex: \"selectedIndex\",\n    selected: \"selected\",\n    orientation: \"orientation\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\"\n  },\n  exportAs: [\"cdkStepper\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepper, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepper]',\n      exportAs: 'cdkStepper'\n    }]\n  }], function () {\n    return [{\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    _steps: [{\n      type: ContentChildren,\n      args: [CdkStep, {\n        descendants: true\n      }]\n    }],\n    _stepHeader: [{\n      type: ContentChildren,\n      args: [CdkStepHeader, {\n        descendants: true\n      }]\n    }],\n    linear: [{\n      type: Input\n    }],\n    selectedIndex: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    orientation: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Button that moves to the next step in a stepper workflow. */\n\n\nclass CdkStepperNext {\n  constructor(_stepper) {\n    this._stepper = _stepper;\n    /** Type of the next button. Defaults to \"submit\" if not specified. */\n\n    this.type = 'submit';\n  }\n\n}\n\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) {\n  return new (t || CdkStepperNext)(i0.ɵɵdirectiveInject(CdkStepper));\n};\n\nCdkStepperNext.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdkStepperNext,\n  selectors: [[\"button\", \"cdkStepperNext\", \"\"]],\n  hostVars: 1,\n  hostBindings: function CdkStepperNext_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() {\n        return ctx._stepper.next();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"type\", ctx.type);\n    }\n  },\n  inputs: {\n    type: \"type\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepperNext, [{\n    type: Directive,\n    args: [{\n      selector: 'button[cdkStepperNext]',\n      host: {\n        '[type]': 'type',\n        '(click)': '_stepper.next()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkStepper\n    }];\n  }, {\n    type: [{\n      type: Input\n    }]\n  });\n})();\n/** Button that moves to the previous step in a stepper workflow. */\n\n\nclass CdkStepperPrevious {\n  constructor(_stepper) {\n    this._stepper = _stepper;\n    /** Type of the previous button. Defaults to \"button\" if not specified. */\n\n    this.type = 'button';\n  }\n\n}\n\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) {\n  return new (t || CdkStepperPrevious)(i0.ɵɵdirectiveInject(CdkStepper));\n};\n\nCdkStepperPrevious.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdkStepperPrevious,\n  selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]],\n  hostVars: 1,\n  hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() {\n        return ctx._stepper.previous();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"type\", ctx.type);\n    }\n  },\n  inputs: {\n    type: \"type\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepperPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'button[cdkStepperPrevious]',\n      host: {\n        '[type]': 'type',\n        '(click)': '_stepper.previous()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkStepper\n    }];\n  }, {\n    type: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass CdkStepperModule {}\n\nCdkStepperModule.ɵfac = function CdkStepperModule_Factory(t) {\n  return new (t || CdkStepperModule)();\n};\n\nCdkStepperModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CdkStepperModule\n});\nCdkStepperModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepperModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n      declarations: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };","map":{"version":3,"sources":["C:/Users/arthu/lifecycle/node_modules/@angular/cdk/fesm2015/stepper.mjs"],"names":["FocusKeyManager","coerceBooleanProperty","coerceNumberProperty","hasModifierKey","SPACE","ENTER","DOCUMENT","i0","Directive","InjectionToken","EventEmitter","forwardRef","TemplateRef","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","Optional","ContentChild","ViewChild","Input","Output","QueryList","ContentChildren","NgModule","_getFocusedElementPierceShadowDom","Subject","of","startWith","takeUntil","i1","BidiModule","CdkStepHeader","constructor","_elementRef","focus","nativeElement","ɵfac","ElementRef","ɵdir","type","args","selector","host","CdkStepLabel","template","nextId","StepperSelectionEvent","STEP_STATE","NUMBER","EDIT","DONE","ERROR","STEPPER_GLOBAL_OPTIONS","CdkStep","_stepper","stepperOptions","interacted","interactedStream","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","editable","value","optional","completed","_getDefaultCompleted","stepControl","valid","hasError","_getDefaultError","invalid","select","selected","reset","ngOnChanges","_stateChanged","_markAsInteracted","emit","_showError","_a","showError","CdkStepper","ɵcmp","exportAs","encapsulation","None","changeDetection","OnPush","decorators","undefined","stepLabel","content","static","label","errorMessage","ariaLabel","ariaLabelledby","state","_dir","_changeDetectorRef","_document","_destroyed","steps","_sortedHeaders","_linear","_selectedIndex","selectionChange","_orientation","_groupId","linear","selectedIndex","index","newIndex","_steps","_isValidIndex","ngDevMode","Error","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","step","indexOf","orientation","_keyManager","withVerticalOrientation","ngAfterContentInit","changes","pipe","subscribe","filter","notifyOnChanges","ngAfterViewInit","_stepHeader","headers","sort","a","b","documentPosition","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","withWrap","withHomeAndEnd","change","_layoutDirection","direction","withHorizontalOrientation","updateActiveItem","Math","max","ngOnDestroy","destroy","next","complete","min","length","previous","forEach","_getStepLabelId","i","_getStepContentId","markForCheck","_getAnimationDirection","position","_getIndicatorType","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","_getFocusIndex","activeItemIndex","stepsArray","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","_onKeydown","event","hasModifier","keyCode","manager","preventDefault","onKeydown","slice","some","control","isIncomplete","pending","stepperElement","focusedElement","contains","Directionality","ChangeDetectorRef","descendants","CdkStepperNext","CdkStepperPrevious","CdkStepperModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, forwardRef, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, ContentChild, ViewChild, Input, Output, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepHeader, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepHeader, selector: \"[cdkStepHeader]\", host: { attributes: { \"role\": \"tab\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepLabel, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepLabel, selector: \"[cdkStepLabel]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepLabel]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error',\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has attempted to move away from the step. */\n        this.interacted = false;\n        /** Emits when the user has attempted to move away from the step. */\n        this.interactedStream = new EventEmitter();\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable;\n    }\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n    get optional() {\n        return this._optional;\n    }\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n    _markAsInteracted() {\n        if (!this.interacted) {\n            this.interacted = true;\n            this.interactedStream.emit(this);\n        }\n    }\n    /** Determines whether the error state can be shown. */\n    _showError() {\n        var _a;\n        // We want to show the error state either if the user opted into/out of it using the\n        // global options, or if they've explicitly set it through the `hasError` input.\n        return (_a = this._stepperOptions.showError) !== null && _a !== void 0 ? _a : this._customError != null;\n    }\n}\nCdkStep.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStep, deps: [{ token: forwardRef(() => CdkStepper) }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkStep.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStep, selector: \"cdk-step\", inputs: { stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\", editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\" }, outputs: { interactedStream: \"interacted\" }, queries: [{ propertyName: \"stepLabel\", first: true, predicate: CdkStepLabel, descendants: true }], viewQueries: [{ propertyName: \"content\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"cdkStep\"], usesOnChanges: true, ngImport: i0, template: '<ng-template><ng-content></ng-content></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStep, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content></ng-content></ng-template>',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: CdkStepper, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => CdkStepper)]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [STEPPER_GLOBAL_OPTIONS]\n                    }] }];\n    }, propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [CdkStepLabel]\n            }], content: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], stepControl: [{\n                type: Input\n            }], interactedStream: [{\n                type: Output,\n                args: ['interacted']\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], state: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], completed: [{\n                type: Input\n            }], hasError: [{\n                type: Input\n            }] } });\nclass CdkStepper {\n    constructor(_dir, _changeDetectorRef, _elementRef, \n    /**\n     * @deprecated No longer in use, to be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** List of step headers sorted based on their DOM order. */\n        this._sortedHeaders = new QueryList();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * @deprecated To be turned into a private property. Use `orientation` instead.\n         * @breaking-change 13.0.0\n         */\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n    }\n    /** Whether the validity of previous steps should be checked or not. */\n    get linear() {\n        return this._linear;\n    }\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        var _a;\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps && this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(newIndex) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            (_a = this.selected) === null || _a === void 0 ? void 0 : _a._markAsInteracted();\n            if (this._selectedIndex !== newIndex &&\n                !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(newIndex);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Orientation of the stepper. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        // This is a protected method so that `MatSteppter` can hook into it.\n        this._orientation = value;\n        if (this._keyManager) {\n            this._keyManager.withVerticalOrientation(value === 'vertical');\n        }\n    }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n        // Material stepper, they won't appear in the `QueryList` in the same order as they're\n        // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n        // them manually to ensure that they're correct. Alternatively, we can change the Material\n        // template to inline the headers in the `ngFor`, but that'll result in a lot of\n        // code duplciation. See #23539.\n        this._stepHeader.changes\n            .pipe(startWith(this._stepHeader), takeUntil(this._destroyed))\n            .subscribe((headers) => {\n            this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n                const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n                // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n                // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n                // tslint:disable-next-line:no-bitwise\n                return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n            }));\n            this._sortedHeaders.notifyOnChanges();\n        });\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._sortedHeaders)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this._selectedIndex)) {\n            this._selectedIndex = 0;\n        }\n    }\n    ngOnDestroy() {\n        this.steps.destroy();\n        this._sortedHeaders.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType\n            ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n            : this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus()\n            ? this._keyManager.setActiveItem(newIndex)\n            : this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null &&\n            !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this._linear && index >= 0) {\n            return this.steps\n                .toArray()\n                .slice(0, index)\n                .some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control\n                    ? control.invalid || control.pending || !step.interacted\n                    : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = _getFocusedElementPierceShadowDom();\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n}\nCdkStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepper, deps: [{ token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepper, selector: \"[cdkStepper]\", inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\", orientation: \"orientation\" }, outputs: { selectionChange: \"selectionChange\" }, queries: [{ propertyName: \"_steps\", predicate: CdkStep, descendants: true }, { propertyName: \"_stepHeader\", predicate: CdkStepHeader, descendants: true }], exportAs: [\"cdkStepper\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { _steps: [{\n                type: ContentChildren,\n                args: [CdkStep, { descendants: true }]\n            }], _stepHeader: [{\n                type: ContentChildren,\n                args: [CdkStepHeader, { descendants: true }]\n            }], linear: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], orientation: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n}\nCdkStepperNext.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperNext, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepperNext.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepperNext, selector: \"button[cdkStepperNext]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.next()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.next()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper }]; }, propDecorators: { type: [{\n                type: Input\n            }] } });\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n}\nCdkStepperPrevious.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperPrevious, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepperPrevious.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepperPrevious, selector: \"button[cdkStepperPrevious]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.previous()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.previous()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper }]; }, propDecorators: { type: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperModule, declarations: [CdkStep,\n        CdkStepper,\n        CdkStepHeader,\n        CdkStepLabel,\n        CdkStepperNext,\n        CdkStepperPrevious], imports: [BidiModule], exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious] });\nCdkStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperModule, imports: [[BidiModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n                    declarations: [\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n"]},"metadata":{},"sourceType":"module"}