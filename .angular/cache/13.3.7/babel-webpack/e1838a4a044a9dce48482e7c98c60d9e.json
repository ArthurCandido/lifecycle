{"ast":null,"code":"import * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayModule, OverlayConfig } from '@angular/cdk/overlay';\nimport * as i4 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, ViewChild, NgModule, TemplateRef, Injector, InjectFlags, Injectable, SkipSelf } from '@angular/core';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { filter, take } from 'rxjs/operators';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Animations used by the Material bottom sheet. */\n\nfunction MatBottomSheetContainer_ng_template_0_Template(rf, ctx) {}\n\nconst matBottomSheetAnimations = {\n  /** Animation that shows and hides a bottom sheet. */\n  bottomSheetState: trigger('state', [state('void, hidden', style({\n    transform: 'translateY(100%)'\n  })), state('visible', style({\n    transform: 'translateY(0%)'\n  })), transition('visible => void, visible => hidden', group([animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.ACCELERATION_CURVE}`), query('@*', animateChild(), {\n    optional: true\n  })])), transition('void => visible', group([animate(`${AnimationDurations.EXITING} ${AnimationCurves.DECELERATION_CURVE}`), query('@*', animateChild(), {\n    optional: true\n  })]))])\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token that can be used to access the data that was passed in to a bottom sheet. */\n\nconst MAT_BOTTOM_SHEET_DATA = new InjectionToken('MatBottomSheetData');\n/**\n * Configuration used when opening a bottom sheet.\n */\n\nclass MatBottomSheetConfig {\n  constructor() {\n    /** Data being injected into the child component. */\n    this.data = null;\n    /** Whether the bottom sheet has a backdrop. */\n\n    this.hasBackdrop = true;\n    /** Whether the user can use escape or clicking outside to close the bottom sheet. */\n\n    this.disableClose = false;\n    /** Aria label to assign to the bottom sheet element. */\n\n    this.ariaLabel = null;\n    /**\n     * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     */\n\n    this.closeOnNavigation = true; // Note that this is set to 'dialog' by default, because while the a11y recommendations\n    // are to focus the first focusable element, doing so prevents screen readers from reading out the\n    // rest of the bottom sheet content.\n\n    /**\n     * Where the bottom sheet should focus on open.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n     * AutoFocusTarget instead.\n     */\n\n    this.autoFocus = 'dialog';\n    /**\n     * Whether the bottom sheet should restore focus to the\n     * previously-focused element, after it's closed.\n     */\n\n    this.restoreFocus = true;\n  }\n\n} // TODO(crisbeto): consolidate some logic between this, MatDialog and MatSnackBar\n\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * @docs-private\n */\n\n\nclass MatBottomSheetContainer extends BasePortalOutlet {\n  constructor(_elementRef, _changeDetectorRef, _focusTrapFactory, _interactivityChecker, _ngZone, breakpointObserver, document,\n  /** The bottom sheet configuration. */\n  bottomSheetConfig) {\n    super();\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._interactivityChecker = _interactivityChecker;\n    this._ngZone = _ngZone;\n    this.bottomSheetConfig = bottomSheetConfig;\n    /** The state of the bottom sheet animations. */\n\n    this._animationState = 'void';\n    /** Emits whenever the state of the animation changes. */\n\n    this._animationStateChanged = new EventEmitter();\n    /** Element that was focused before the bottom sheet was opened. */\n\n    this._elementFocusedBeforeOpened = null;\n    /**\n     * Attaches a DOM portal to the bottom sheet container.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n\n    this.attachDomPortal = portal => {\n      this._validatePortalAttached();\n\n      this._setPanelClass();\n\n      this._savePreviouslyFocusedElement();\n\n      return this._portalOutlet.attachDomPortal(portal);\n    };\n\n    this._document = document;\n    this._breakpointSubscription = breakpointObserver.observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge]).subscribe(() => {\n      this._toggleClass('mat-bottom-sheet-container-medium', breakpointObserver.isMatched(Breakpoints.Medium));\n\n      this._toggleClass('mat-bottom-sheet-container-large', breakpointObserver.isMatched(Breakpoints.Large));\n\n      this._toggleClass('mat-bottom-sheet-container-xlarge', breakpointObserver.isMatched(Breakpoints.XLarge));\n    });\n  }\n  /** Attach a component portal as content to this bottom sheet container. */\n\n\n  attachComponentPortal(portal) {\n    this._validatePortalAttached();\n\n    this._setPanelClass();\n\n    this._savePreviouslyFocusedElement();\n\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n  /** Attach a template portal as content to this bottom sheet container. */\n\n\n  attachTemplatePortal(portal) {\n    this._validatePortalAttached();\n\n    this._setPanelClass();\n\n    this._savePreviouslyFocusedElement();\n\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n  /** Begin animation of bottom sheet entrance into view. */\n\n\n  enter() {\n    if (!this._destroyed) {\n      this._animationState = 'visible';\n\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n  /** Begin animation of the bottom sheet exiting from view. */\n\n\n  exit() {\n    if (!this._destroyed) {\n      this._animationState = 'hidden';\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._breakpointSubscription.unsubscribe();\n\n    this._destroyed = true;\n  }\n\n  _onAnimationDone(event) {\n    if (event.toState === 'hidden') {\n      this._restoreFocus();\n    } else if (event.toState === 'visible') {\n      this._trapFocus();\n    }\n\n    this._animationStateChanged.emit(event);\n  }\n\n  _onAnimationStart(event) {\n    this._animationStateChanged.emit(event);\n  }\n\n  _toggleClass(cssClass, add) {\n    this._elementRef.nativeElement.classList.toggle(cssClass, add);\n  }\n\n  _validatePortalAttached() {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Attempting to attach bottom sheet content after content is already attached');\n    }\n  }\n\n  _setPanelClass() {\n    const element = this._elementRef.nativeElement;\n    element.classList.add(...coerceArray(this.bottomSheetConfig.panelClass || []));\n  }\n  /**\n   * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n   * attribute to forcefully focus it. The attribute is removed after focus is moved.\n   * @param element The element to focus.\n   */\n\n\n  _forceFocus(element, options) {\n    if (!this._interactivityChecker.isFocusable(element)) {\n      element.tabIndex = -1; // The tabindex attribute should be removed to avoid navigating to that element again\n\n      this._ngZone.runOutsideAngular(() => {\n        const callback = () => {\n          element.removeEventListener('blur', callback);\n          element.removeEventListener('mousedown', callback);\n          element.removeAttribute('tabindex');\n        };\n\n        element.addEventListener('blur', callback);\n        element.addEventListener('mousedown', callback);\n      });\n    }\n\n    element.focus(options);\n  }\n  /**\n   * Focuses the first element that matches the given selector within the focus trap.\n   * @param selector The CSS selector for the element to set focus to.\n   */\n\n\n  _focusByCssSelector(selector, options) {\n    let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n\n    if (elementToFocus) {\n      this._forceFocus(elementToFocus, options);\n    }\n  }\n  /**\n   * Moves the focus inside the focus trap. When autoFocus is not set to 'bottom-sheet',\n   * if focus cannot be moved then focus will go to the bottom sheet container.\n   */\n\n\n  _trapFocus() {\n    const element = this._elementRef.nativeElement;\n\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(element);\n    } // If were to attempt to focus immediately, then the content of the bottom sheet would not\n    // yet be ready in instances where change detection has to run first. To deal with this,\n    // we simply wait for the microtask queue to be empty when setting focus when autoFocus\n    // isn't set to bottom sheet. If the element inside the bottom sheet can't be focused,\n    // then the container is focused so the user can't tab into other elements behind it.\n\n\n    switch (this.bottomSheetConfig.autoFocus) {\n      case false:\n      case 'dialog':\n        const activeElement = _getFocusedElementPierceShadowDom(); // Ensure that focus is on the bottom sheet container. It's possible that a different\n        // component tried to move focus while the open animation was running. See:\n        // https://github.com/angular/components/issues/16215. Note that we only want to do this\n        // if the focus isn't inside the bottom sheet already, because it's possible that the\n        // consumer specified `autoFocus` in order to move focus themselves.\n\n\n        if (activeElement !== element && !element.contains(activeElement)) {\n          element.focus();\n        }\n\n        break;\n\n      case true:\n      case 'first-tabbable':\n        this._focusTrap.focusInitialElementWhenReady();\n\n        break;\n\n      case 'first-heading':\n        this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n\n        break;\n\n      default:\n        this._focusByCssSelector(this.bottomSheetConfig.autoFocus);\n\n        break;\n    }\n  }\n  /** Restores focus to the element that was focused before the bottom sheet was opened. */\n\n\n  _restoreFocus() {\n    const toFocus = this._elementFocusedBeforeOpened; // We need the extra check, because IE can set the `activeElement` to null in some cases.\n\n    if (this.bottomSheetConfig.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n      const activeElement = _getFocusedElementPierceShadowDom();\n\n      const element = this._elementRef.nativeElement; // Make sure that focus is still inside the bottom sheet or is on the body (usually because a\n      // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n      // the consumer moved it themselves before the animation was done, in which case we shouldn't\n      // do anything.\n\n      if (!activeElement || activeElement === this._document.body || activeElement === element || element.contains(activeElement)) {\n        toFocus.focus();\n      }\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n  /** Saves a reference to the element that was focused before the bottom sheet was opened. */\n\n\n  _savePreviouslyFocusedElement() {\n    this._elementFocusedBeforeOpened = _getFocusedElementPierceShadowDom(); // The `focus` method isn't available during server-side rendering.\n\n    if (this._elementRef.nativeElement.focus) {\n      this._ngZone.runOutsideAngular(() => {\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n      });\n    }\n  }\n\n}\n\nMatBottomSheetContainer.ɵfac = function MatBottomSheetContainer_Factory(t) {\n  return new (t || MatBottomSheetContainer)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.FocusTrapFactory), i0.ɵɵdirectiveInject(i1.InteractivityChecker), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.BreakpointObserver), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(MatBottomSheetConfig));\n};\n\nMatBottomSheetContainer.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatBottomSheetContainer,\n  selectors: [[\"mat-bottom-sheet-container\"]],\n  viewQuery: function MatBottomSheetContainer_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    }\n  },\n  hostAttrs: [\"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-modal\", \"true\", 1, \"mat-bottom-sheet-container\"],\n  hostVars: 2,\n  hostBindings: function MatBottomSheetContainer_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵsyntheticHostListener(\"@state.start\", function MatBottomSheetContainer_animation_state_start_HostBindingHandler($event) {\n        return ctx._onAnimationStart($event);\n      })(\"@state.done\", function MatBottomSheetContainer_animation_state_done_HostBindingHandler($event) {\n        return ctx._onAnimationDone($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-label\", ctx.bottomSheetConfig == null ? null : ctx.bottomSheetConfig.ariaLabel);\n      i0.ɵɵsyntheticHostProperty(\"@state\", ctx._animationState);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkPortalOutlet\", \"\"]],\n  template: function MatBottomSheetContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, MatBottomSheetContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    }\n  },\n  directives: [i4.CdkPortalOutlet],\n  styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matBottomSheetAnimations.bottomSheetState]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatBottomSheetContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-bottom-sheet-container',\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      animations: [matBottomSheetAnimations.bottomSheetState],\n      host: {\n        'class': 'mat-bottom-sheet-container',\n        'tabindex': '-1',\n        'role': 'dialog',\n        'aria-modal': 'true',\n        '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n        '[@state]': '_animationState',\n        '(@state.start)': '_onAnimationStart($event)',\n        '(@state.done)': '_onAnimationDone($event)'\n      },\n      template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\",\n      styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.FocusTrapFactory\n    }, {\n      type: i1.InteractivityChecker\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i2.BreakpointObserver\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: MatBottomSheetConfig\n    }];\n  }, {\n    _portalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet, {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatBottomSheetModule {}\n\nMatBottomSheetModule.ɵfac = function MatBottomSheetModule_Factory(t) {\n  return new (t || MatBottomSheetModule)();\n};\n\nMatBottomSheetModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatBottomSheetModule\n});\nMatBottomSheetModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[OverlayModule, MatCommonModule, PortalModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatBottomSheetModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, MatCommonModule, PortalModule],\n      exports: [MatBottomSheetContainer, MatCommonModule],\n      declarations: [MatBottomSheetContainer]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n */\n\n\nclass MatBottomSheetRef {\n  constructor(containerInstance, _overlayRef) {\n    this._overlayRef = _overlayRef;\n    /** Subject for notifying the user that the bottom sheet has been dismissed. */\n\n    this._afterDismissed = new Subject();\n    /** Subject for notifying the user that the bottom sheet has opened and appeared. */\n\n    this._afterOpened = new Subject();\n    this.containerInstance = containerInstance;\n    this.disableClose = containerInstance.bottomSheetConfig.disableClose; // Emit when opening animation completes\n\n    containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'visible'), take(1)).subscribe(() => {\n      this._afterOpened.next();\n\n      this._afterOpened.complete();\n    }); // Dispose overlay when closing animation is complete\n\n\n    containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'hidden'), take(1)).subscribe(() => {\n      clearTimeout(this._closeFallbackTimeout);\n\n      _overlayRef.dispose();\n    });\n\n    _overlayRef.detachments().pipe(take(1)).subscribe(() => {\n      this._afterDismissed.next(this._result);\n\n      this._afterDismissed.complete();\n    });\n\n    merge(_overlayRef.backdropClick(), _overlayRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE))).subscribe(event => {\n      if (!this.disableClose && (event.type !== 'keydown' || !hasModifierKey(event))) {\n        event.preventDefault();\n        this.dismiss();\n      }\n    });\n  }\n  /**\n   * Dismisses the bottom sheet.\n   * @param result Data to be passed back to the bottom sheet opener.\n   */\n\n\n  dismiss(result) {\n    if (!this._afterDismissed.closed) {\n      // Transition the backdrop in parallel to the bottom sheet.\n      this.containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'start'), take(1)).subscribe(event => {\n        // The logic that disposes of the overlay depends on the exit animation completing, however\n        // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n        // timeout which will clean everything up if the animation hasn't fired within the specified\n        // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n        // vast majority of cases the timeout will have been cleared before it has fired.\n        this._closeFallbackTimeout = setTimeout(() => {\n          this._overlayRef.dispose();\n        }, event.totalTime + 100);\n\n        this._overlayRef.detachBackdrop();\n      });\n\n      this._result = result;\n      this.containerInstance.exit();\n    }\n  }\n  /** Gets an observable that is notified when the bottom sheet is finished closing. */\n\n\n  afterDismissed() {\n    return this._afterDismissed;\n  }\n  /** Gets an observable that is notified when the bottom sheet has opened and appeared. */\n\n\n  afterOpened() {\n    return this._afterOpened;\n  }\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n\n\n  backdropClick() {\n    return this._overlayRef.backdropClick();\n  }\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n\n\n  keydownEvents() {\n    return this._overlayRef.keydownEvents();\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token that can be used to specify default bottom sheet options. */\n\n\nconst MAT_BOTTOM_SHEET_DEFAULT_OPTIONS = new InjectionToken('mat-bottom-sheet-default-options');\n/**\n * Service to trigger Material Design bottom sheets.\n */\n\nclass MatBottomSheet {\n  constructor(_overlay, _injector, _parentBottomSheet, _defaultOptions) {\n    this._overlay = _overlay;\n    this._injector = _injector;\n    this._parentBottomSheet = _parentBottomSheet;\n    this._defaultOptions = _defaultOptions;\n    this._bottomSheetRefAtThisLevel = null;\n  }\n  /** Reference to the currently opened bottom sheet. */\n\n\n  get _openedBottomSheetRef() {\n    const parent = this._parentBottomSheet;\n    return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n  }\n\n  set _openedBottomSheetRef(value) {\n    if (this._parentBottomSheet) {\n      this._parentBottomSheet._openedBottomSheetRef = value;\n    } else {\n      this._bottomSheetRefAtThisLevel = value;\n    }\n  }\n\n  open(componentOrTemplateRef, config) {\n    const _config = _applyConfigDefaults(this._defaultOptions || new MatBottomSheetConfig(), config);\n\n    const overlayRef = this._createOverlay(_config);\n\n    const container = this._attachContainer(overlayRef, _config);\n\n    const ref = new MatBottomSheetRef(container, overlayRef);\n\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      container.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n        $implicit: _config.data,\n        bottomSheetRef: ref\n      }));\n    } else {\n      const portal = new ComponentPortal(componentOrTemplateRef, undefined, this._createInjector(_config, ref));\n      const contentRef = container.attachComponentPortal(portal);\n      ref.instance = contentRef.instance;\n    } // When the bottom sheet is dismissed, clear the reference to it.\n\n\n    ref.afterDismissed().subscribe(() => {\n      // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n      if (this._openedBottomSheetRef == ref) {\n        this._openedBottomSheetRef = null;\n      }\n    });\n\n    if (this._openedBottomSheetRef) {\n      // If a bottom sheet is already in view, dismiss it and enter the\n      // new bottom sheet after exit animation is complete.\n      this._openedBottomSheetRef.afterDismissed().subscribe(() => ref.containerInstance.enter());\n\n      this._openedBottomSheetRef.dismiss();\n    } else {\n      // If no bottom sheet is in view, enter the new bottom sheet.\n      ref.containerInstance.enter();\n    }\n\n    this._openedBottomSheetRef = ref;\n    return ref;\n  }\n  /**\n   * Dismisses the currently-visible bottom sheet.\n   * @param result Data to pass to the bottom sheet instance.\n   */\n\n\n  dismiss(result) {\n    if (this._openedBottomSheetRef) {\n      this._openedBottomSheetRef.dismiss(result);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._bottomSheetRefAtThisLevel) {\n      this._bottomSheetRefAtThisLevel.dismiss();\n    }\n  }\n  /**\n   * Attaches the bottom sheet container component to the overlay.\n   */\n\n\n  _attachContainer(overlayRef, config) {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = Injector.create({\n      parent: userInjector || this._injector,\n      providers: [{\n        provide: MatBottomSheetConfig,\n        useValue: config\n      }]\n    });\n    const containerPortal = new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n    const containerRef = overlayRef.attach(containerPortal);\n    return containerRef.instance;\n  }\n  /**\n   * Creates a new overlay and places it in the correct location.\n   * @param config The user-specified bottom sheet config.\n   */\n\n\n  _createOverlay(config) {\n    const overlayConfig = new OverlayConfig({\n      direction: config.direction,\n      hasBackdrop: config.hasBackdrop,\n      disposeOnNavigation: config.closeOnNavigation,\n      maxWidth: '100%',\n      scrollStrategy: config.scrollStrategy || this._overlay.scrollStrategies.block(),\n      positionStrategy: this._overlay.position().global().centerHorizontally().bottom('0')\n    });\n\n    if (config.backdropClass) {\n      overlayConfig.backdropClass = config.backdropClass;\n    }\n\n    return this._overlay.create(overlayConfig);\n  }\n  /**\n   * Creates an injector to be used inside of a bottom sheet component.\n   * @param config Config that was used to create the bottom sheet.\n   * @param bottomSheetRef Reference to the bottom sheet.\n   */\n\n\n  _createInjector(config, bottomSheetRef) {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const providers = [{\n      provide: MatBottomSheetRef,\n      useValue: bottomSheetRef\n    }, {\n      provide: MAT_BOTTOM_SHEET_DATA,\n      useValue: config.data\n    }];\n\n    if (config.direction && (!userInjector || !userInjector.get(Directionality, null, InjectFlags.Optional))) {\n      providers.push({\n        provide: Directionality,\n        useValue: {\n          value: config.direction,\n          change: of()\n        }\n      });\n    }\n\n    return Injector.create({\n      parent: userInjector || this._injector,\n      providers\n    });\n  }\n\n}\n\nMatBottomSheet.ɵfac = function MatBottomSheet_Factory(t) {\n  return new (t || MatBottomSheet)(i0.ɵɵinject(i1$1.Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(MatBottomSheet, 12), i0.ɵɵinject(MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, 8));\n};\n\nMatBottomSheet.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MatBottomSheet,\n  factory: MatBottomSheet.ɵfac,\n  providedIn: MatBottomSheetModule\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatBottomSheet, [{\n    type: Injectable,\n    args: [{\n      providedIn: MatBottomSheetModule\n    }]\n  }], function () {\n    return [{\n      type: i1$1.Overlay\n    }, {\n      type: i0.Injector\n    }, {\n      type: MatBottomSheet,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: MatBottomSheetConfig,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_BOTTOM_SHEET_DEFAULT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Applies default options to the bottom sheet config.\n * @param defaults Object containing the default values to which to fall back.\n * @param config The configuration to which the defaults will be applied.\n * @returns The new configuration object with defaults applied.\n */\n\n\nfunction _applyConfigDefaults(defaults, config) {\n  return Object.assign(Object.assign({}, defaults), config);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_BOTTOM_SHEET_DATA, MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, MatBottomSheet, MatBottomSheetConfig, MatBottomSheetContainer, MatBottomSheetModule, MatBottomSheetRef, matBottomSheetAnimations };","map":{"version":3,"sources":["C:/Users/arthu/lifecycle/node_modules/@angular/material/fesm2015/bottom-sheet.mjs"],"names":["i1$1","OverlayModule","OverlayConfig","i4","BasePortalOutlet","CdkPortalOutlet","PortalModule","TemplatePortal","ComponentPortal","i0","InjectionToken","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Optional","Inject","ViewChild","NgModule","TemplateRef","Injector","InjectFlags","Injectable","SkipSelf","AnimationDurations","AnimationCurves","MatCommonModule","coerceArray","i2","Breakpoints","_getFocusedElementPierceShadowDom","DOCUMENT","trigger","state","style","transition","group","animate","query","animateChild","i1","Directionality","Subject","merge","of","ESCAPE","hasModifierKey","filter","take","matBottomSheetAnimations","bottomSheetState","transform","COMPLEX","ACCELERATION_CURVE","optional","EXITING","DECELERATION_CURVE","MAT_BOTTOM_SHEET_DATA","MatBottomSheetConfig","constructor","data","hasBackdrop","disableClose","ariaLabel","closeOnNavigation","autoFocus","restoreFocus","MatBottomSheetContainer","_elementRef","_changeDetectorRef","_focusTrapFactory","_interactivityChecker","_ngZone","breakpointObserver","document","bottomSheetConfig","_animationState","_animationStateChanged","_elementFocusedBeforeOpened","attachDomPortal","portal","_validatePortalAttached","_setPanelClass","_savePreviouslyFocusedElement","_portalOutlet","_document","_breakpointSubscription","observe","Medium","Large","XLarge","subscribe","_toggleClass","isMatched","attachComponentPortal","attachTemplatePortal","enter","_destroyed","detectChanges","exit","markForCheck","ngOnDestroy","unsubscribe","_onAnimationDone","event","toState","_restoreFocus","_trapFocus","emit","_onAnimationStart","cssClass","add","nativeElement","classList","toggle","hasAttached","ngDevMode","Error","element","panelClass","_forceFocus","options","isFocusable","tabIndex","runOutsideAngular","callback","removeEventListener","removeAttribute","addEventListener","focus","_focusByCssSelector","selector","elementToFocus","querySelector","_focusTrap","create","activeElement","contains","focusInitialElementWhenReady","toFocus","body","destroy","Promise","resolve","then","ɵfac","ElementRef","ChangeDetectorRef","FocusTrapFactory","InteractivityChecker","NgZone","BreakpointObserver","ɵcmp","type","args","changeDetection","Default","encapsulation","None","animations","host","template","styles","undefined","decorators","static","MatBottomSheetModule","ɵmod","ɵinj","imports","exports","declarations","MatBottomSheetRef","containerInstance","_overlayRef","_afterDismissed","_afterOpened","pipe","phaseName","next","complete","clearTimeout","_closeFallbackTimeout","dispose","detachments","_result","backdropClick","keydownEvents","keyCode","preventDefault","dismiss","result","closed","setTimeout","totalTime","detachBackdrop","afterDismissed","afterOpened","MAT_BOTTOM_SHEET_DEFAULT_OPTIONS","MatBottomSheet","_overlay","_injector","_parentBottomSheet","_defaultOptions","_bottomSheetRefAtThisLevel","_openedBottomSheetRef","parent","value","open","componentOrTemplateRef","config","_config","_applyConfigDefaults","overlayRef","_createOverlay","container","_attachContainer","ref","$implicit","bottomSheetRef","_createInjector","contentRef","instance","userInjector","viewContainerRef","injector","providers","provide","useValue","containerPortal","containerRef","attach","overlayConfig","direction","disposeOnNavigation","maxWidth","scrollStrategy","scrollStrategies","block","positionStrategy","position","global","centerHorizontally","bottom","backdropClass","get","push","change","Overlay","ɵprov","providedIn","defaults","Object","assign"],"mappings":"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","sourcesContent":["import * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayModule, OverlayConfig } from '@angular/cdk/overlay';\nimport * as i4 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, ViewChild, NgModule, TemplateRef, Injector, InjectFlags, Injectable, SkipSelf } from '@angular/core';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { filter, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Animations used by the Material bottom sheet. */\nconst matBottomSheetAnimations = {\n    /** Animation that shows and hides a bottom sheet. */\n    bottomSheetState: trigger('state', [\n        state('void, hidden', style({ transform: 'translateY(100%)' })),\n        state('visible', style({ transform: 'translateY(0%)' })),\n        transition('visible => void, visible => hidden', group([\n            animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.ACCELERATION_CURVE}`),\n            query('@*', animateChild(), { optional: true }),\n        ])),\n        transition('void => visible', group([\n            animate(`${AnimationDurations.EXITING} ${AnimationCurves.DECELERATION_CURVE}`),\n            query('@*', animateChild(), { optional: true }),\n        ])),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a bottom sheet. */\nconst MAT_BOTTOM_SHEET_DATA = new InjectionToken('MatBottomSheetData');\n/**\n * Configuration used when opening a bottom sheet.\n */\nclass MatBottomSheetConfig {\n    constructor() {\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** Whether the bottom sheet has a backdrop. */\n        this.hasBackdrop = true;\n        /** Whether the user can use escape or clicking outside to close the bottom sheet. */\n        this.disableClose = false;\n        /** Aria label to assign to the bottom sheet element. */\n        this.ariaLabel = null;\n        /**\n         * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // Note that this is set to 'dialog' by default, because while the a11y recommendations\n        // are to focus the first focusable element, doing so prevents screen readers from reading out the\n        // rest of the bottom sheet content.\n        /**\n         * Where the bottom sheet should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'dialog';\n        /**\n         * Whether the bottom sheet should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n    }\n}\n\n// TODO(crisbeto): consolidate some logic between this, MatDialog and MatSnackBar\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * @docs-private\n */\nclass MatBottomSheetContainer extends BasePortalOutlet {\n    constructor(_elementRef, _changeDetectorRef, _focusTrapFactory, _interactivityChecker, _ngZone, breakpointObserver, document, \n    /** The bottom sheet configuration. */\n    bottomSheetConfig) {\n        super();\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this.bottomSheetConfig = bottomSheetConfig;\n        /** The state of the bottom sheet animations. */\n        this._animationState = 'void';\n        /** Emits whenever the state of the animation changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the bottom sheet was opened. */\n        this._elementFocusedBeforeOpened = null;\n        /**\n         * Attaches a DOM portal to the bottom sheet container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._validatePortalAttached();\n            this._setPanelClass();\n            this._savePreviouslyFocusedElement();\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._document = document;\n        this._breakpointSubscription = breakpointObserver\n            .observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n            .subscribe(() => {\n            this._toggleClass('mat-bottom-sheet-container-medium', breakpointObserver.isMatched(Breakpoints.Medium));\n            this._toggleClass('mat-bottom-sheet-container-large', breakpointObserver.isMatched(Breakpoints.Large));\n            this._toggleClass('mat-bottom-sheet-container-xlarge', breakpointObserver.isMatched(Breakpoints.XLarge));\n        });\n    }\n    /** Attach a component portal as content to this bottom sheet container. */\n    attachComponentPortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /** Attach a template portal as content to this bottom sheet container. */\n    attachTemplatePortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Begin animation of bottom sheet entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Begin animation of the bottom sheet exiting from view. */\n    exit() {\n        if (!this._destroyed) {\n            this._animationState = 'hidden';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n        this._destroyed = true;\n    }\n    _onAnimationDone(event) {\n        if (event.toState === 'hidden') {\n            this._restoreFocus();\n        }\n        else if (event.toState === 'visible') {\n            this._trapFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    _toggleClass(cssClass, add) {\n        this._elementRef.nativeElement.classList.toggle(cssClass, add);\n    }\n    _validatePortalAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach bottom sheet content after content is already attached');\n        }\n    }\n    _setPanelClass() {\n        const element = this._elementRef.nativeElement;\n        element.classList.add(...coerceArray(this.bottomSheetConfig.panelClass || []));\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'bottom-sheet',\n     * if focus cannot be moved then focus will go to the bottom sheet container.\n     */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(element);\n        }\n        // If were to attempt to focus immediately, then the content of the bottom sheet would not\n        // yet be ready in instances where change detection has to run first. To deal with this,\n        // we simply wait for the microtask queue to be empty when setting focus when autoFocus\n        // isn't set to bottom sheet. If the element inside the bottom sheet can't be focused,\n        // then the container is focused so the user can't tab into other elements behind it.\n        switch (this.bottomSheetConfig.autoFocus) {\n            case false:\n            case 'dialog':\n                const activeElement = _getFocusedElementPierceShadowDom();\n                // Ensure that focus is on the bottom sheet container. It's possible that a different\n                // component tried to move focus while the open animation was running. See:\n                // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                // if the focus isn't inside the bottom sheet already, because it's possible that the\n                // consumer specified `autoFocus` in order to move focus themselves.\n                if (activeElement !== element && !element.contains(activeElement)) {\n                    element.focus();\n                }\n                break;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady();\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this.bottomSheetConfig.autoFocus);\n                break;\n        }\n    }\n    /** Restores focus to the element that was focused before the bottom sheet was opened. */\n    _restoreFocus() {\n        const toFocus = this._elementFocusedBeforeOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this.bottomSheetConfig.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the bottom sheet or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Saves a reference to the element that was focused before the bottom sheet was opened. */\n    _savePreviouslyFocusedElement() {\n        this._elementFocusedBeforeOpened = _getFocusedElementPierceShadowDom();\n        // The `focus` method isn't available during server-side rendering.\n        if (this._elementRef.nativeElement.focus) {\n            this._ngZone.runOutsideAngular(() => {\n                Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n            });\n        }\n    }\n}\nMatBottomSheetContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetContainer, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusTrapFactory }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i2.BreakpointObserver }, { token: DOCUMENT, optional: true }, { token: MatBottomSheetConfig }], target: i0.ɵɵFactoryTarget.Component });\nMatBottomSheetContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatBottomSheetContainer, selector: \"mat-bottom-sheet-container\", host: { attributes: { \"tabindex\": \"-1\", \"role\": \"dialog\", \"aria-modal\": \"true\" }, listeners: { \"@state.start\": \"_onAnimationStart($event)\", \"@state.done\": \"_onAnimationDone($event)\" }, properties: { \"attr.aria-label\": \"bottomSheetConfig?.ariaLabel\", \"@state\": \"_animationState\" }, classAttribute: \"mat-bottom-sheet-container\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\", styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"], directives: [{ type: i4.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matBottomSheetAnimations.bottomSheetState], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-bottom-sheet-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, animations: [matBottomSheetAnimations.bottomSheetState], host: {\n                        'class': 'mat-bottom-sheet-container',\n                        'tabindex': '-1',\n                        'role': 'dialog',\n                        'aria-modal': 'true',\n                        '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n                        '[@state]': '_animationState',\n                        '(@state.start)': '_onAnimationStart($event)',\n                        '(@state.done)': '_onAnimationDone($event)',\n                    }, template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\", styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusTrapFactory }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i2.BreakpointObserver }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: MatBottomSheetConfig }];\n    }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatBottomSheetModule {\n}\nMatBottomSheetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatBottomSheetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetModule, declarations: [MatBottomSheetContainer], imports: [OverlayModule, MatCommonModule, PortalModule], exports: [MatBottomSheetContainer, MatCommonModule] });\nMatBottomSheetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetModule, imports: [[OverlayModule, MatCommonModule, PortalModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, MatCommonModule, PortalModule],\n                    exports: [MatBottomSheetContainer, MatCommonModule],\n                    declarations: [MatBottomSheetContainer],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n */\nclass MatBottomSheetRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the bottom sheet has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the bottom sheet has opened and appeared. */\n        this._afterOpened = new Subject();\n        this.containerInstance = containerInstance;\n        this.disableClose = containerInstance.bottomSheetConfig.disableClose;\n        // Emit when opening animation completes\n        containerInstance._animationStateChanged\n            .pipe(filter(event => event.phaseName === 'done' && event.toState === 'visible'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        containerInstance._animationStateChanged\n            .pipe(filter(event => event.phaseName === 'done' && event.toState === 'hidden'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            _overlayRef.dispose();\n        });\n        _overlayRef\n            .detachments()\n            .pipe(take(1))\n            .subscribe(() => {\n            this._afterDismissed.next(this._result);\n            this._afterDismissed.complete();\n        });\n        merge(_overlayRef.backdropClick(), _overlayRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE))).subscribe(event => {\n            if (!this.disableClose &&\n                (event.type !== 'keydown' || !hasModifierKey(event))) {\n                event.preventDefault();\n                this.dismiss();\n            }\n        });\n    }\n    /**\n     * Dismisses the bottom sheet.\n     * @param result Data to be passed back to the bottom sheet opener.\n     */\n    dismiss(result) {\n        if (!this._afterDismissed.closed) {\n            // Transition the backdrop in parallel to the bottom sheet.\n            this.containerInstance._animationStateChanged\n                .pipe(filter(event => event.phaseName === 'start'), take(1))\n                .subscribe(event => {\n                // The logic that disposes of the overlay depends on the exit animation completing, however\n                // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n                // timeout which will clean everything up if the animation hasn't fired within the specified\n                // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n                // vast majority of cases the timeout will have been cleared before it has fired.\n                this._closeFallbackTimeout = setTimeout(() => {\n                    this._overlayRef.dispose();\n                }, event.totalTime + 100);\n                this._overlayRef.detachBackdrop();\n            });\n            this._result = result;\n            this.containerInstance.exit();\n        }\n    }\n    /** Gets an observable that is notified when the bottom sheet is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the bottom sheet has opened and appeared. */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify default bottom sheet options. */\nconst MAT_BOTTOM_SHEET_DEFAULT_OPTIONS = new InjectionToken('mat-bottom-sheet-default-options');\n/**\n * Service to trigger Material Design bottom sheets.\n */\nclass MatBottomSheet {\n    constructor(_overlay, _injector, _parentBottomSheet, _defaultOptions) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._parentBottomSheet = _parentBottomSheet;\n        this._defaultOptions = _defaultOptions;\n        this._bottomSheetRefAtThisLevel = null;\n    }\n    /** Reference to the currently opened bottom sheet. */\n    get _openedBottomSheetRef() {\n        const parent = this._parentBottomSheet;\n        return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n    }\n    set _openedBottomSheetRef(value) {\n        if (this._parentBottomSheet) {\n            this._parentBottomSheet._openedBottomSheetRef = value;\n        }\n        else {\n            this._bottomSheetRefAtThisLevel = value;\n        }\n    }\n    open(componentOrTemplateRef, config) {\n        const _config = _applyConfigDefaults(this._defaultOptions || new MatBottomSheetConfig(), config);\n        const overlayRef = this._createOverlay(_config);\n        const container = this._attachContainer(overlayRef, _config);\n        const ref = new MatBottomSheetRef(container, overlayRef);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n                $implicit: _config.data,\n                bottomSheetRef: ref,\n            }));\n        }\n        else {\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, this._createInjector(_config, ref));\n            const contentRef = container.attachComponentPortal(portal);\n            ref.instance = contentRef.instance;\n        }\n        // When the bottom sheet is dismissed, clear the reference to it.\n        ref.afterDismissed().subscribe(() => {\n            // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n            if (this._openedBottomSheetRef == ref) {\n                this._openedBottomSheetRef = null;\n            }\n        });\n        if (this._openedBottomSheetRef) {\n            // If a bottom sheet is already in view, dismiss it and enter the\n            // new bottom sheet after exit animation is complete.\n            this._openedBottomSheetRef.afterDismissed().subscribe(() => ref.containerInstance.enter());\n            this._openedBottomSheetRef.dismiss();\n        }\n        else {\n            // If no bottom sheet is in view, enter the new bottom sheet.\n            ref.containerInstance.enter();\n        }\n        this._openedBottomSheetRef = ref;\n        return ref;\n    }\n    /**\n     * Dismisses the currently-visible bottom sheet.\n     * @param result Data to pass to the bottom sheet instance.\n     */\n    dismiss(result) {\n        if (this._openedBottomSheetRef) {\n            this._openedBottomSheetRef.dismiss(result);\n        }\n    }\n    ngOnDestroy() {\n        if (this._bottomSheetRefAtThisLevel) {\n            this._bottomSheetRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the bottom sheet container component to the overlay.\n     */\n    _attachContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatBottomSheetConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified bottom sheet config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig({\n            direction: config.direction,\n            hasBackdrop: config.hasBackdrop,\n            disposeOnNavigation: config.closeOnNavigation,\n            maxWidth: '100%',\n            scrollStrategy: config.scrollStrategy || this._overlay.scrollStrategies.block(),\n            positionStrategy: this._overlay.position().global().centerHorizontally().bottom('0'),\n        });\n        if (config.backdropClass) {\n            overlayConfig.backdropClass = config.backdropClass;\n        }\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a bottom sheet component.\n     * @param config Config that was used to create the bottom sheet.\n     * @param bottomSheetRef Reference to the bottom sheet.\n     */\n    _createInjector(config, bottomSheetRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const providers = [\n            { provide: MatBottomSheetRef, useValue: bottomSheetRef },\n            { provide: MAT_BOTTOM_SHEET_DATA, useValue: config.data },\n        ];\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, InjectFlags.Optional))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n}\nMatBottomSheet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheet, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: MatBottomSheet, optional: true, skipSelf: true }, { token: MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMatBottomSheet.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheet, providedIn: MatBottomSheetModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheet, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: MatBottomSheetModule }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: MatBottomSheet, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: MatBottomSheetConfig, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_BOTTOM_SHEET_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n/**\n * Applies default options to the bottom sheet config.\n * @param defaults Object containing the default values to which to fall back.\n * @param config The configuration to which the defaults will be applied.\n * @returns The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(defaults, config) {\n    return Object.assign(Object.assign({}, defaults), config);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BOTTOM_SHEET_DATA, MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, MatBottomSheet, MatBottomSheetConfig, MatBottomSheetContainer, MatBottomSheetModule, MatBottomSheetRef, matBottomSheetAnimations };\n"]},"metadata":{},"sourceType":"module"}